; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(defn coba
  ([] (coba 4 5))
  ([a b]
   (+ a b)))
#'user/coba
clj꞉user꞉> 
(coba 10 20)
30
clj꞉user꞉> 
(coba)
9
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(stop)
:ok
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(start)
; Execution error (BindException) at sun.nio.ch.Net/bind0 (Net.java:-2).
; Address already in use
clj꞉user꞉> 
(reset)
(routes system system-test user) :reloading
; Execution error (BindException) at sun.nio.ch.Net/bind0 (Net.java:-2).
; Address already in use
clj꞉user꞉> 

; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:ok
clj꞉user꞉> 
(stop)
:ok
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:ok
clj꞉user꞉> 
(assoc-in {:context 1} [:request :username] "ohan")
{:context 1, :request {:username "ohan"}}
clj꞉user꞉> 
(let [{:keys [request] :as context} {:context 1, :request {:username "ohan"}}]
  request)
{:username "ohan"}
clj꞉user꞉> 
(let [{:keys [request] :as context} {:context 1, :request {:username "ohan"}}]
  (get request :username))
"ohan"
clj꞉user꞉> 
(let [{:keys [request] :as context} {:context 1, :request {:username "ohan"}}]
  (assoc-in context [:request :username] "asto"))
{:context 1, :request {:username "asto"}}
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(stop)
:ok
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:ok
clj꞉user꞉> 
(stop)
:ok
clj꞉user꞉> 
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:error-while-loading system-test
#error {
 :cause "Assert failed: (valid-interceptor? %)"
 :via
 [{:type clojure.lang.Compiler$CompilerException
   :message "Syntax error macroexpanding at (system_test.clj:12:15)."
   :data #:clojure.error{:phase :execution, :line 12, :column 15, :source "system_test.clj"}
   :at [clojure.lang.Compiler$InvokeExpr eval "Compiler.java" 3711]}
  {:type java.lang.AssertionError
   :message "Assert failed: (valid-interceptor? %)"
   :at [io.pedestal.interceptor$interceptor invokeStatic "interceptor.clj" 78]}]
 :trace
 [[io.pedestal.interceptor$interceptor invokeStatic "interceptor.clj" 78]
  [io.pedestal.interceptor$interceptor invoke "interceptor.clj" 78]
  [clojure.core$mapv$fn__8468 invoke "core.clj" 6914]
  [clojure.lang.PersistentVector reduce "PersistentVector.java" 343]
  [clojure.core$reduce invokeStatic "core.clj" 6829]
  [clojure.core$mapv invokeStatic "core.clj" 6905]
  [clojure.core$mapv invoke "core.clj" 6905]
  [io.pedestal.http.route.definition.table$parse_handlers invokeStatic "table.clj" 77]
  [io.pedestal.http.route.definition.table$parse_handlers invoke "table.clj" 70]
  [io.pedestal.http.route.definition.table$route_table_row invokeStatic "table.clj" 123]
  [io.pedestal.http.route.definition.table$route_table_row invoke "table.clj" 121]
  [clojure.core$partial$fn__5857 invoke "core.clj" 2629]
  [clojure.core$map_indexed$mapi__8571$fn__8572 invoke "core.clj" 7310]
  [clojure.lang.LazySeq sval "LazySeq.java" 42]
  [clojure.lang.LazySeq seq "LazySeq.java" 51]
  [clojure.lang.RT seq "RT.java" 535]
  [clojure.core$seq__5419 invokeStatic "core.clj" 139]
  [clojure.core$map$fn__5884 invoke "core.clj" 2750]
  [clojure.lang.LazySeq sval "LazySeq.java" 42]
  [clojure.lang.LazySeq seq "LazySeq.java" 51]
  [clojure.lang.RT seq "RT.java" 535]
  [clojure.core$seq__5419 invokeStatic "core.clj" 139]
  [clojure.core.protocols$seq_reduce invokeStatic "protocols.clj" 24]
  [clojure.core.protocols$fn__8168 invokeStatic "protocols.clj" 75]
  [clojure.core.protocols$fn__8168 invoke "protocols.clj" 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke "protocols.clj" 13]
  [clojure.core$reduce invokeStatic "core.clj" 6830]
  [clojure.core$reduce invoke "core.clj" 6812]
  [io.pedestal.http.route.definition$prioritize_constraints invokeStatic "definition.clj" 54]
  [io.pedestal.http.route.definition$prioritize_constraints invoke "definition.clj" 47]
  [io.pedestal.http.route.definition$ensure_routes_integrity invokeStatic "definition.clj" 72]
  [io.pedestal.http.route.definition$ensure_routes_integrity invoke "definition.clj" 71]
  [io.pedestal.http.route.definition.table$table_routes invokeStatic "table.clj" 160]
  [io.pedestal.http.route.definition.table$table_routes invoke "table.clj" 151]
  [io.pedestal.http.route.definition.table$table_routes invokeStatic "table.clj" 153]
  [io.pedestal.http.route.definition.table$table_routes invoke "table.clj" 151]
  [io.pedestal.http.route$eval11800$fn__11801 invoke "route.clj" 410]
  [io.pedestal.http.route$eval11775$fn__11776$G__11766__11781 invoke "route.clj" 394]
  [io.pedestal.http.route$expand_routes invokeStatic "route.clj" 427]
  [io.pedestal.http.route$expand_routes invoke "route.clj" 412]
  [clojure.lang.AFn applyToHelper "AFn.java" 154]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.lang.Compiler$InvokeExpr eval "Compiler.java" 3706]
  [clojure.lang.Compiler$InvokeExpr eval "Compiler.java" 3705]
  [clojure.lang.Compiler$DefExpr eval "Compiler.java" 457]
  [clojure.lang.Compiler eval "Compiler.java" 7186]
  [clojure.lang.Compiler load "Compiler.java" 7640]
  [clojure.lang.RT loadResourceScript "RT.java" 381]
  [clojure.lang.RT loadResourceScript "RT.java" 372]
  [clojure.lang.RT load "RT.java" 459]
  [clojure.lang.RT load "RT.java" 424]
  [clojure.core$load$fn__6856 invoke "core.clj" 6115]
  [clojure.core$load invokeStatic "core.clj" 6114]
  [clojure.core$load doInvoke "core.clj" 6098]
  [clojure.lang.RestFn invoke "RestFn.java" 408]
  [clojure.core$load_one invokeStatic "core.clj" 5897]
  [clojure.core$load_one invoke "core.clj" 5892]
  [clojure.core$load_lib$fn__6796 invoke "core.clj" 5937]
  [clojure.core$load_lib invokeStatic "core.clj" 5936]
  [clojure.core$load_lib doInvoke "core.clj" 5917]
  [clojure.lang.RestFn applyTo "RestFn.java" 142]
  [clojure.core$apply invokeStatic "core.clj" 669]
  [clojure.core$load_libs invokeStatic "core.clj" 5974]
  [clojure.core$load_libs doInvoke "core.clj" 5958]
  [clojure.lang.RestFn applyTo "RestFn.java" 137]
  [clojure.core$apply invokeStatic "core.clj" 669]
  [clojure.core$require invokeStatic "core.clj" 5996]
  [clojure.core$require doInvoke "core.clj" 5996]
  [clojure.lang.RestFn invoke "RestFn.java" 421]
  [clojure.tools.namespace.reload$track_reload_one invokeStatic "reload.clj" 35]
  [clojure.tools.namespace.reload$track_reload_one invoke "reload.clj" 21]
  [clojure.tools.namespace.reload$track_reload invokeStatic "reload.clj" 52]
  [clojure.tools.namespace.reload$track_reload invoke "reload.clj" 43]
  [clojure.lang.AFn applyToHelper "AFn.java" 154]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.lang.Var alterRoot "Var.java" 308]
  [clojure.core$alter_var_root invokeStatic "core.clj" 5499]
  [clojure.core$alter_var_root doInvoke "core.clj" 5494]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [clojure.tools.namespace.repl$do_refresh invokeStatic "repl.clj" 94]
  [clojure.tools.namespace.repl$do_refresh invoke "repl.clj" 82]
  [clojure.tools.namespace.repl$refresh invokeStatic "repl.clj" 145]
  [clojure.tools.namespace.repl$refresh doInvoke "repl.clj" 128]
  [clojure.lang.RestFn invoke "RestFn.java" 421]
  [user$reset invokeStatic "user.clj" 18]
  [user$reset invoke "user.clj" 16]
  [user$eval24485 invokeStatic "NO_SOURCE_FILE" 212]
  [user$eval24485 invoke "NO_SOURCE_FILE" 212]
  [clojure.lang.Compiler eval "Compiler.java" 7181]
  [clojure.lang.Compiler eval "Compiler.java" 7136]
  [clojure.core$eval invokeStatic "core.clj" 3202]
  [clojure.core$eval invoke "core.clj" 3198]
  [nrepl.middleware.interruptible_eval$evaluate$fn__18067$fn__18068 invoke "interruptible_eval.clj" 87]
  [clojure.lang.AFn applyToHelper "AFn.java" 152]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.core$apply invokeStatic "core.clj" 667]
  [clojure.core$with_bindings_STAR_ invokeStatic "core.clj" 1977]
  [clojure.core$with_bindings_STAR_ doInvoke "core.clj" 1977]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [nrepl.middleware.interruptible_eval$evaluate$fn__18067 invoke "interruptible_eval.clj" 87]
  [clojure.main$repl$read_eval_print__9110$fn__9113 invoke "main.clj" 437]
  [clojure.main$repl$read_eval_print__9110 invoke "main.clj" 437]
  [clojure.main$repl$fn__9119 invoke "main.clj" 458]
  [clojure.main$repl invokeStatic "main.clj" 458]
  [clojure.main$repl doInvoke "main.clj" 368]
  [clojure.lang.RestFn invoke "RestFn.java" 1523]
  [nrepl.middleware.interruptible_eval$evaluate invokeStatic "interruptible_eval.clj" 84]
  [nrepl.middleware.interruptible_eval$evaluate invoke "interruptible_eval.clj" 56]
  [nrepl.middleware.interruptible_eval$interruptible_eval$fn__18100$fn__18104 invoke "interruptible_eval.clj" 152]
  [clojure.lang.AFn run "AFn.java" 22]
  [nrepl.middleware.session$session_exec$main_loop__18170$fn__18174 invoke "session.clj" 218]
  [nrepl.middleware.session$session_exec$main_loop__18170 invoke "session.clj" 217]
  [clojure.lang.AFn run "AFn.java" 22]
  [java.lang.Thread run "Thread.java" 831]]}
clj꞉user꞉> 
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:error-while-loading routes
#error {
 :cause "Unable to resolve symbol: hiccup in this context"
 :via
 [{:type clojure.lang.Compiler$CompilerException
   :message "Syntax error compiling at (routes.clj:88:26)."
   :data #:clojure.error{:phase :compile-syntax-check, :line 88, :column 26, :source "routes.clj"}
   :at [clojure.lang.Compiler analyze "Compiler.java" 6812]}
  {:type java.lang.RuntimeException
   :message "Unable to resolve symbol: hiccup in this context"
   :at [clojure.lang.Util runtimeException "Util.java" 221]}]
 :trace
 [[clojure.lang.Util runtimeException "Util.java" 221]
  [clojure.lang.Compiler resolveIn "Compiler.java" 7418]
  [clojure.lang.Compiler resolve "Compiler.java" 7362]
  [clojure.lang.Compiler analyzeSymbol "Compiler.java" 7323]
  [clojure.lang.Compiler analyze "Compiler.java" 6772]
  [clojure.lang.Compiler analyze "Compiler.java" 6749]
  [clojure.lang.Compiler$InvokeExpr parse "Compiler.java" 3824]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7113]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyze "Compiler.java" 6749]
  [clojure.lang.Compiler$InvokeExpr parse "Compiler.java" 3892]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7113]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7099]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler access$300 "Compiler.java" 38]
  [clojure.lang.Compiler$LetExpr$Parser parse "Compiler.java" 6388]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7111]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7099]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyze "Compiler.java" 6749]
  [clojure.lang.Compiler$BodyExpr$Parser parse "Compiler.java" 6124]
  [clojure.lang.Compiler$LetExpr$Parser parse "Compiler.java" 6440]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7111]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7099]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyze "Compiler.java" 6749]
  [clojure.lang.Compiler$BodyExpr$Parser parse "Compiler.java" 6124]
  [clojure.lang.Compiler$FnMethod parse "Compiler.java" 5471]
  [clojure.lang.Compiler$FnExpr parse "Compiler.java" 4033]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7109]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7099]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyze "Compiler.java" 6749]
  [clojure.lang.Compiler$MapExpr parse "Compiler.java" 3108]
  [clojure.lang.Compiler analyze "Compiler.java" 6801]
  [clojure.lang.Compiler access$300 "Compiler.java" 38]
  [clojure.lang.Compiler$DefExpr$Parser parse "Compiler.java" 596]
  [clojure.lang.Compiler analyzeSeq "Compiler.java" 7111]
  [clojure.lang.Compiler analyze "Compiler.java" 6793]
  [clojure.lang.Compiler analyze "Compiler.java" 6749]
  [clojure.lang.Compiler eval "Compiler.java" 7185]
  [clojure.lang.Compiler load "Compiler.java" 7640]
  [clojure.lang.RT loadResourceScript "RT.java" 381]
  [clojure.lang.RT loadResourceScript "RT.java" 372]
  [clojure.lang.RT load "RT.java" 459]
  [clojure.lang.RT load "RT.java" 424]
  [clojure.core$load$fn__6856 invoke "core.clj" 6115]
  [clojure.core$load invokeStatic "core.clj" 6114]
  [clojure.core$load doInvoke "core.clj" 6098]
  [clojure.lang.RestFn invoke "RestFn.java" 408]
  [clojure.core$load_one invokeStatic "core.clj" 5897]
  [clojure.core$load_one invoke "core.clj" 5892]
  [clojure.core$load_lib$fn__6796 invoke "core.clj" 5937]
  [clojure.core$load_lib invokeStatic "core.clj" 5936]
  [clojure.core$load_lib doInvoke "core.clj" 5917]
  [clojure.lang.RestFn applyTo "RestFn.java" 142]
  [clojure.core$apply invokeStatic "core.clj" 669]
  [clojure.core$load_libs invokeStatic "core.clj" 5974]
  [clojure.core$load_libs doInvoke "core.clj" 5958]
  [clojure.lang.RestFn applyTo "RestFn.java" 137]
  [clojure.core$apply invokeStatic "core.clj" 669]
  [clojure.core$require invokeStatic "core.clj" 5996]
  [clojure.core$require doInvoke "core.clj" 5996]
  [clojure.lang.RestFn invoke "RestFn.java" 421]
  [clojure.tools.namespace.reload$track_reload_one invokeStatic "reload.clj" 35]
  [clojure.tools.namespace.reload$track_reload_one invoke "reload.clj" 21]
  [clojure.tools.namespace.reload$track_reload invokeStatic "reload.clj" 52]
  [clojure.tools.namespace.reload$track_reload invoke "reload.clj" 43]
  [clojure.lang.AFn applyToHelper "AFn.java" 154]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.lang.Var alterRoot "Var.java" 308]
  [clojure.core$alter_var_root invokeStatic "core.clj" 5499]
  [clojure.core$alter_var_root doInvoke "core.clj" 5494]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [clojure.tools.namespace.repl$do_refresh invokeStatic "repl.clj" 94]
  [clojure.tools.namespace.repl$do_refresh invoke "repl.clj" 82]
  [clojure.tools.namespace.repl$refresh invokeStatic "repl.clj" 145]
  [clojure.tools.namespace.repl$refresh doInvoke "repl.clj" 128]
  [clojure.lang.RestFn invoke "RestFn.java" 421]
  [user$reset invokeStatic "user.clj" 18]
  [user$reset invoke "user.clj" 16]
  [user$eval24745 invokeStatic "NO_SOURCE_FILE" 363]
  [user$eval24745 invoke "NO_SOURCE_FILE" 363]
  [clojure.lang.Compiler eval "Compiler.java" 7181]
  [clojure.lang.Compiler eval "Compiler.java" 7136]
  [clojure.core$eval invokeStatic "core.clj" 3202]
  [clojure.core$eval invoke "core.clj" 3198]
  [nrepl.middleware.interruptible_eval$evaluate$fn__18068$fn__18069 invoke "interruptible_eval.clj" 87]
  [clojure.lang.AFn applyToHelper "AFn.java" 152]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.core$apply invokeStatic "core.clj" 667]
  [clojure.core$with_bindings_STAR_ invokeStatic "core.clj" 1977]
  [clojure.core$with_bindings_STAR_ doInvoke "core.clj" 1977]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [nrepl.middleware.interruptible_eval$evaluate$fn__18068 invoke "interruptible_eval.clj" 87]
  [clojure.main$repl$read_eval_print__9110$fn__9113 invoke "main.clj" 437]
  [clojure.main$repl$read_eval_print__9110 invoke "main.clj" 437]
  [clojure.main$repl$fn__9119 invoke "main.clj" 458]
  [clojure.main$repl invokeStatic "main.clj" 458]
  [clojure.main$repl doInvoke "main.clj" 368]
  [clojure.lang.RestFn invoke "RestFn.java" 1523]
  [nrepl.middleware.interruptible_eval$evaluate invokeStatic "interruptible_eval.clj" 84]
  [nrepl.middleware.interruptible_eval$evaluate invoke "interruptible_eval.clj" 56]
  [nrepl.middleware.interruptible_eval$interruptible_eval$fn__18101$fn__18105 invoke "interruptible_eval.clj" 152]
  [clojure.lang.AFn run "AFn.java" 22]
  [nrepl.middleware.session$session_exec$main_loop__18171$fn__18175 invoke "session.clj" 218]
  [nrepl.middleware.session$session_exec$main_loop__18171 invoke "session.clj" 217]
  [clojure.lang.AFn run "AFn.java" 22]
  [java.lang.Thread run "Thread.java" 831]]}
clj꞉user꞉> 
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(start)
:ok
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:error-while-loading system-test
#error {
 :cause "Assert failed: (valid-interceptor? %)"
 :via
 [{:type clojure.lang.Compiler$CompilerException
   :message "Syntax error macroexpanding at (system_test.clj:12:15)."
   :data #:clojure.error{:phase :execution, :line 12, :column 15, :source "system_test.clj"}
   :at [clojure.lang.Compiler$InvokeExpr eval "Compiler.java" 3711]}
  {:type java.lang.AssertionError
   :message "Assert failed: (valid-interceptor? %)"
   :at [io.pedestal.interceptor$interceptor invokeStatic "interceptor.clj" 78]}]
 :trace
 [[io.pedestal.interceptor$interceptor invokeStatic "interceptor.clj" 78]
  [io.pedestal.interceptor$interceptor invoke "interceptor.clj" 78]
  [clojure.core$mapv$fn__8468 invoke "core.clj" 6914]
  [clojure.lang.PersistentVector reduce "PersistentVector.java" 343]
  [clojure.core$reduce invokeStatic "core.clj" 6829]
  [clojure.core$mapv invokeStatic "core.clj" 6905]
  [clojure.core$mapv invoke "core.clj" 6905]
  [io.pedestal.http.route.definition.table$parse_handlers invokeStatic "table.clj" 77]
  [io.pedestal.http.route.definition.table$parse_handlers invoke "table.clj" 70]
  [io.pedestal.http.route.definition.table$route_table_row invokeStatic "table.clj" 123]
  [io.pedestal.http.route.definition.table$route_table_row invoke "table.clj" 121]
  [clojure.core$partial$fn__5857 invoke "core.clj" 2629]
  [clojure.core$map_indexed$mapi__8571$fn__8572 invoke "core.clj" 7310]
  [clojure.lang.LazySeq sval "LazySeq.java" 42]
  [clojure.lang.LazySeq seq "LazySeq.java" 51]
  [clojure.lang.RT seq "RT.java" 535]
  [clojure.core$seq__5419 invokeStatic "core.clj" 139]
  [clojure.core$map$fn__5884 invoke "core.clj" 2750]
  [clojure.lang.LazySeq sval "LazySeq.java" 42]
  [clojure.lang.LazySeq seq "LazySeq.java" 51]
  [clojure.lang.RT seq "RT.java" 535]
  [clojure.core$seq__5419 invokeStatic "core.clj" 139]
  [clojure.core.protocols$seq_reduce invokeStatic "protocols.clj" 24]
  [clojure.core.protocols$fn__8168 invokeStatic "protocols.clj" 75]
  [clojure.core.protocols$fn__8168 invoke "protocols.clj" 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke "protocols.clj" 13]
  [clojure.core$reduce invokeStatic "core.clj" 6830]
  [clojure.core$reduce invoke "core.clj" 6812]
  [io.pedestal.http.route.definition$prioritize_constraints invokeStatic "definition.clj" 54]
  [io.pedestal.http.route.definition$prioritize_constraints invoke "definition.clj" 47]
  [io.pedestal.http.route.definition$ensure_routes_integrity invokeStatic "definition.clj" 72]
  [io.pedestal.http.route.definition$ensure_routes_integrity invoke "definition.clj" 71]
  [io.pedestal.http.route.definition.table$table_routes invokeStatic "table.clj" 160]
  [io.pedestal.http.route.definition.table$table_routes invoke "table.clj" 151]
  [io.pedestal.http.route.definition.table$table_routes invokeStatic "table.clj" 153]
  [io.pedestal.http.route.definition.table$table_routes invoke "table.clj" 151]
  [io.pedestal.http.route$eval11800$fn__11801 invoke "route.clj" 410]
  [io.pedestal.http.route$eval11775$fn__11776$G__11766__11781 invoke "route.clj" 394]
  [io.pedestal.http.route$expand_routes invokeStatic "route.clj" 427]
  [io.pedestal.http.route$expand_routes invoke "route.clj" 412]
  [clojure.lang.AFn applyToHelper "AFn.java" 154]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.lang.Compiler$InvokeExpr eval "Compiler.java" 3706]
  [clojure.lang.Compiler$InvokeExpr eval "Compiler.java" 3705]
  [clojure.lang.Compiler$DefExpr eval "Compiler.java" 457]
  [clojure.lang.Compiler eval "Compiler.java" 7186]
  [clojure.lang.Compiler load "Compiler.java" 7640]
  [clojure.lang.RT loadResourceScript "RT.java" 381]
  [clojure.lang.RT loadResourceScript "RT.java" 372]
  [clojure.lang.RT load "RT.java" 459]
  [clojure.lang.RT load "RT.java" 424]
  [clojure.core$load$fn__6856 invoke "core.clj" 6115]
  [clojure.core$load invokeStatic "core.clj" 6114]
  [clojure.core$load doInvoke "core.clj" 6098]
  [clojure.lang.RestFn invoke "RestFn.java" 408]
  [clojure.core$load_one invokeStatic "core.clj" 5897]
  [clojure.core$load_one invoke "core.clj" 5892]
  [clojure.core$load_lib$fn__6796 invoke "core.clj" 5937]
  [clojure.core$load_lib invokeStatic "core.clj" 5936]
  [clojure.core$load_lib doInvoke "core.clj" 5917]
  [clojure.lang.RestFn applyTo "RestFn.java" 142]
  [clojure.core$apply invokeStatic "core.clj" 669]
  [clojure.core$load_libs invokeStatic "core.clj" 5974]
  [clojure.core$load_libs doInvoke "core.clj" 5958]
  [clojure.lang.RestFn applyTo "RestFn.java" 137]
  [clojure.core$apply invokeStatic "core.clj" 669]
  [clojure.core$require invokeStatic "core.clj" 5996]
  [clojure.core$require doInvoke "core.clj" 5996]
  [clojure.lang.RestFn invoke "RestFn.java" 421]
  [clojure.tools.namespace.reload$track_reload_one invokeStatic "reload.clj" 35]
  [clojure.tools.namespace.reload$track_reload_one invoke "reload.clj" 21]
  [clojure.tools.namespace.reload$track_reload invokeStatic "reload.clj" 52]
  [clojure.tools.namespace.reload$track_reload invoke "reload.clj" 43]
  [clojure.lang.AFn applyToHelper "AFn.java" 154]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.lang.Var alterRoot "Var.java" 308]
  [clojure.core$alter_var_root invokeStatic "core.clj" 5499]
  [clojure.core$alter_var_root doInvoke "core.clj" 5494]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [clojure.tools.namespace.repl$do_refresh invokeStatic "repl.clj" 94]
  [clojure.tools.namespace.repl$do_refresh invoke "repl.clj" 82]
  [clojure.tools.namespace.repl$refresh invokeStatic "repl.clj" 145]
  [clojure.tools.namespace.repl$refresh doInvoke "repl.clj" 128]
  [clojure.lang.RestFn invoke "RestFn.java" 421]
  [user$reset invokeStatic "user.clj" 18]
  [user$reset invoke "user.clj" 16]
  [user$eval24745 invokeStatic "NO_SOURCE_FILE" 513]
  [user$eval24745 invoke "NO_SOURCE_FILE" 513]
  [clojure.lang.Compiler eval "Compiler.java" 7181]
  [clojure.lang.Compiler eval "Compiler.java" 7136]
  [clojure.core$eval invokeStatic "core.clj" 3202]
  [clojure.core$eval invoke "core.clj" 3198]
  [nrepl.middleware.interruptible_eval$evaluate$fn__18068$fn__18069 invoke "interruptible_eval.clj" 87]
  [clojure.lang.AFn applyToHelper "AFn.java" 152]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.core$apply invokeStatic "core.clj" 667]
  [clojure.core$with_bindings_STAR_ invokeStatic "core.clj" 1977]
  [clojure.core$with_bindings_STAR_ doInvoke "core.clj" 1977]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [nrepl.middleware.interruptible_eval$evaluate$fn__18068 invoke "interruptible_eval.clj" 87]
  [clojure.main$repl$read_eval_print__9110$fn__9113 invoke "main.clj" 437]
  [clojure.main$repl$read_eval_print__9110 invoke "main.clj" 437]
  [clojure.main$repl$fn__9119 invoke "main.clj" 458]
  [clojure.main$repl invokeStatic "main.clj" 458]
  [clojure.main$repl doInvoke "main.clj" 368]
  [clojure.lang.RestFn invoke "RestFn.java" 1523]
  [nrepl.middleware.interruptible_eval$evaluate invokeStatic "interruptible_eval.clj" 84]
  [nrepl.middleware.interruptible_eval$evaluate invoke "interruptible_eval.clj" 56]
  [nrepl.middleware.interruptible_eval$interruptible_eval$fn__18101$fn__18105 invoke "interruptible_eval.clj" 152]
  [clojure.lang.AFn run "AFn.java" 22]
  [nrepl.middleware.session$session_exec$main_loop__18171$fn__18175 invoke "session.clj" 218]
  [nrepl.middleware.session$session_exec$main_loop__18171 invoke "session.clj" 217]
  [clojure.lang.AFn run "AFn.java" 22]
  [java.lang.Thread run "Thread.java" 831]]}
clj꞉user꞉> 
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.28.5"}}}' -M:dev -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; nREPL Connection was closed
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(reset)
:reloading (pedestal validate routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> (reset)
:reloading (routes system system-test user)
:ok
clj꞉user꞉> 
(let [{:keys [a b]} {:c 1 :d 2}])
nil
clj꞉user꞉> 
(let [{:keys [a b]} {:c 1 :d 2}]
  a)
nil
clj꞉user꞉> 
(let [{:keys [a b]} {:c 1 :d 2}]
  c)
; Syntax error compiling at (.calva/output-window/output.calva-repl:679:1).
; Unable to resolve symbol: c in this context
clj꞉user꞉> 
(stop)
:ok
clj꞉user꞉> 
